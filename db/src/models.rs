// Generated by diesel_ext

#![allow(unused)]
#![allow(clippy::all)]

use crate::schema::*;

use chrono::offset::Utc;
use chrono::DateTime;
#[derive(Queryable, Debug, Identifiable, AsChangeset, Model, Clone)]
#[table_name = "advertised_yield"]
pub struct AdvertisedYield {
    pub id: i64,
    pub vault_address: String,
    pub farm_name: String,
    pub apr: f64,
    pub scraped_at: DateTime<Utc>,
}

#[derive(Queryable, Debug, Identifiable, AsChangeset, Model, Clone)]
#[table_name = "deposit_tracking"]
pub struct DepositTracking {
    pub id: i64,
    pub owner_address: String,
    pub account_address: String,
    pub account_data: Vec<u8>,
    pub vault_account_address: String,
    pub scraped_at: DateTime<Utc>,
    pub current_balance: f64,
    pub current_shares: f64,
    pub balance_usd_value: f64,
}

#[derive(Queryable, Debug, Identifiable, AsChangeset, Model, Clone)]
#[table_name = "historic_tshare_price"]
pub struct HistoricTsharePrice {
    pub id: i64,
    pub farm_name: String,
    pub price: f64,
    pub total_supply: f64,
    pub holder_count: f64,
    pub scraped_at: DateTime<Utc>,
}

#[derive(Queryable, Debug, Identifiable, AsChangeset, Model, Clone)]
#[table_name = "interest_rate"]
pub struct InterestRate {
    pub id: i64,
    pub platform: String,
    pub asset: String,
    pub lending_rate: f64,
    pub borrow_rate: f64,
    pub utilization_rate: f64,
    pub available_amount: f64,
    pub borrowed_amount: f64,
    pub scraped_at: DateTime<Utc>,
}

#[derive(Queryable, Debug, Identifiable, AsChangeset, Model, Clone)]
#[table_name = "interest_rate_curve"]
pub struct InterestRateCurve {
    pub id: i64,
    pub platform: String,
    pub asset: String,
    pub rate_name: String,
    pub min_borrow_rate: f64,
    pub max_borrow_rate: f64,
    pub optimal_borrow_rate: f64,
    pub optimal_utilization_rate: f64,
    pub degen_borrow_rate: f64,
    pub degen_utilization_rate: f64,
}

#[derive(Queryable, Debug, Identifiable, AsChangeset, Model, Clone)]
#[table_name = "interest_rate_moving_average"]
pub struct InterestRateMovingAverage {
    pub id: i64,
    pub platform: String,
    pub asset: String,
    pub rate_name: String,
    pub period_start: DateTime<Utc>,
    pub period_end: DateTime<Utc>,
    pub period_running_average: f64,
    pub period_observed_rates: Vec<f64>,
    pub last_period_running_average: f64,
}

#[derive(Queryable, Debug, Identifiable, AsChangeset, Model, Clone)]
#[table_name = "lending_optimizer_distribution"]
pub struct LendingOptimizerDistribution {
    pub id: i64,
    pub vault_name: String,
    pub standalone_vault_platforms: Vec<String>,
    pub standalone_vault_deposited_balances: Vec<f64>,
}

#[derive(Queryable, Debug, Identifiable, AsChangeset, Model, Clone)]
#[table_name = "realize_yield"]
pub struct RealizeYield {
    pub id: i64,
    pub vault_address: String,
    pub farm_name: String,
    pub total_deposited_balance: f64,
    pub gain_per_second: f64,
    pub apr: f64,
    pub scraped_at: DateTime<Utc>,
}

#[derive(Queryable, Debug, Identifiable, AsChangeset, Model, Clone)]
#[table_name = "staking_analytic"]
pub struct StakingAnalytic {
    pub id: i64,
    pub tokens_staked: f64,
    pub tokens_locked: f64,
    pub stulip_total_supply: f64,
    pub apy: f64,
    pub price_float: f64,
    pub price_uint: i64,
    pub active_unstakes: i64,
    pub scraped_at: DateTime<Utc>,
}

#[derive(Queryable, Debug, Identifiable, AsChangeset, Model, Clone)]
#[table_name = "token_balance"]
pub struct TokenBalance {
    pub id: i64,
    pub token_account: String,
    pub token_mint: String,
    pub identifier: String,
    pub balance: f64,
    pub scraped_at: DateTime<Utc>,
}

#[derive(Queryable, Debug, Identifiable, AsChangeset, Model, Clone)]
#[table_name = "token_price"]
pub struct TokenPrice {
    pub id: i64,
    pub asset: String,
    pub price: f64,
    pub platform: String,
    pub coin_in_lp: f64,
    pub pc_in_lp: f64,
    pub asset_identifier: String,
    pub period_start: DateTime<Utc>,
    pub period_end: DateTime<Utc>,
    pub period_observed_prices: Vec<f64>,
    pub period_running_average: f64,
    pub last_period_average: f64,
    pub feed_stopped: bool,
    pub token_mint: String,
}

#[derive(Queryable, Debug, Identifiable, AsChangeset, Model, Clone)]
#[table_name = "v1_liquidated_position"]
pub struct V1LiquidatedPosition {
    pub id: i64,
    pub liquidation_event_id: String,
    pub temp_liquidation_account: String,
    pub authority: String,
    pub user_farm: String,
    pub obligation: String,
    pub started_at: DateTime<Utc>,
    pub ended_at: Option<DateTime<Utc>>,
    pub leveraged_farm: String,
}

#[derive(Queryable, Debug, Identifiable, AsChangeset, Model, Clone)]
#[table_name = "v1_obligation_account"]
pub struct V1ObligationAccount {
    pub id: i64,
    pub account: String,
    pub authority: String,
}

#[derive(Queryable, Debug, Identifiable, AsChangeset, Model, Clone)]
#[table_name = "v1_obligation_ltv"]
pub struct V1ObligationLtv {
    pub id: i64,
    pub authority: String,
    pub user_farm: String,
    pub account_address: String,
    pub ltv: f64,
    pub scraped_at: DateTime<Utc>,
    pub leveraged_farm: String,
}

#[derive(Queryable, Debug, Identifiable, AsChangeset, Model, Clone)]
#[table_name = "v1_user_farm"]
pub struct V1UserFarm {
    pub id: i64,
    pub account_address: String,
    pub authority: String,
    pub obligations: Vec<String>,
    pub obligation_indexes: Vec<i32>,
    pub leveraged_farm: String,
}

#[derive(Queryable, Debug, Identifiable, AsChangeset, Model, Clone)]
#[table_name = "vault"]
pub struct Vault {
    pub id: i64,
    pub account_address: String,
    pub account_data: Vec<u8>,
    pub farm_name: String,
    pub scraped_at: DateTime<Utc>,
    pub last_compound_ts: Option<DateTime<Utc>>,
    pub last_compound_ts_unix: i64,
}

#[derive(Queryable, Debug, Identifiable, AsChangeset, Model, Clone)]
#[table_name = "vault_tvl"]
pub struct VaultTvl {
    pub id: i64,
    pub farm_name: String,
    pub total_shares: f64,
    pub total_underlying: f64,
    pub value_locked: f64,
    pub scraped_at: DateTime<Utc>,
}
